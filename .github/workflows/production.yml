on:
  push:
    branches:
      - "main"

jobs:
  check-files-changed:
    name: Check files that were changed
    runs-on: ubuntu-latest
    outputs:
      app: ${{steps.filter.outputs.app}}
      database: ${{steps.filter.outputs.database}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check files changed
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            app:
                - "src/libs/**"
                - "src/app/**"
                - "next.config.mjs"
            database:
                - "drizzle.config.ts"
                - "drizzle/*"

  database-app:
    needs: "check-files-changed"
    name: Database -> Vercel
    if: ${{needs.check-files-changed.outputs.app == 'true' && needs.check-files-changed.outputs.database == 'true'}}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: |
            - recursive: true
              args: [--no-frozen-lockfile]

      - name: Make .dev.vars file for database migration
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DATABASE_URL: ${{secrets.DATABASE_URL_PROD}}
          file_name: .env

      - name: Database Schema Generation and Migration
        run: pnpm run db:migrate

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  app:
    needs: "check-files-changed"
    name: Vercel
    if: ${{needs.check-files-changed.outputs.app == 'true' && needs.check-files-changed.outputs.database == 'false'}}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: |
            - recursive: true
              args: [--no-frozen-lockfile]

      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  database:
    needs: "check-files-changed"
    name: Database
    if: ${{needs.check-files-changed.outputs.database == 'true' && needs.check-files-changed.outputs.app == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: |
            - recursive: true
              args: [--no-frozen-lockfile]

      - name: Make .dev.vars file for database migration
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DATABASE_URL: ${{secrets.DATABASE_URL_PROD}}
          file_name: .env

      - name: Database Schema Generation and Migration
        run: pnpm run db:migrate
